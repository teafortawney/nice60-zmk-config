/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/reset.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
// ------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
// | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
// |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      SHIFT       |
// |  CTL  |  WIN  |  ALT  |            SPACE             |  ALT  |  MO(1)  |  MENU |  CTL  |
// ------------------------------------------------------------------------------------------
			bindings = <
	&gresc  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL  &kp BSPC
	&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT  &kp RBKT  &kp BSLH
	&kp CLCK  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMI &kp SQT           &kp RET
	&kp LSHFT   &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH           &kp RSHFT
	&kp LCTRL &kp LGUI &kp LALT             &lt 1 SPACE                     &kp RALT  &mo 1   &kp K_APP  &kp RCTRL
			>;
		};

		layer1 {
// ------------------------------------------------------------------------------------------------
// | BT CLR |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |  F7  |  F8  |  F9  |  F10  |  F11  |  F12  |  DEL  |
// | BT 1  |    |    |    |  HUEUP | SATUP | BRIUP | SPDUP |  HOME |  PGUP  |  UP  |  PGDN  |  END  | CALC |
// | BT 2   |     |    |    |  HUEDN  | SATDN | BRIDN  |  SPDDN  |    |  LEFT  |  DOWN  |  RIGHT  |  PLAY  |
// | BT 3     |    |      |      |     |   RESET   |     |     |  VOL DN  |  VOL UP  |     |  MUTE  |
// | BT 4  |      |      |             TOG RGB                |  PREV   |   MO(2)    |    NEXT   |  PRT SCR  |
// ------------------------------------------------------------------------------------------------
			bindings = <
	&bt BT_CLR   &kp F1    &kp F2    &kp F3  &kp F4           &kp F5          &kp F6          &kp F7          &kp F8   &kp F9   &kp F10  &kp F11 &kp F12  &kp DEL
	&bt BT_SEL 0  &trans    &trans    &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI  &kp HOME   &kp PG_UP   &kp UP   &kp PG_DN  &kp END          &kp C_AL_CALC
	&bt BT_SEL 1   &trans  &trans  &trans &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &trans   &kp LEFT   &kp DOWN   &kp RIGHT        &kp C_PLAY_PAUSE
	&bt BT_SEL 2    &trans    &trans    &trans   &trans          &kp C_RESET          &trans          &trans          &kp C_VOL_DN   &kp C_VOL_UP   &trans                          &kp C_MUTE
	&bt BT_SEL 3  &trans   &trans                            &rgb_ug RGB_TOG                                      &kp C_PREV      &mo 2      &kp C_NEXT               &kp PSCRN
			>;
		};

		layer2 {
// ------------------------------------------------------------------------------------------------
// | BT CLR | BT 1 | BT 2 | BT 3 | BT 4 |     |     |     |     |     |      |     |     |           |
// |     |     |     |     |     |     |     |     |     |     |      |     |     |           |
// |     |     |     |     |     |     |     |     |    |      |   |     |    |
// |     |     |      |      |      |      |     |     |     |     |     |                  |
// |     |      |      |                             |  |       |       |    |
// ------------------------------------------------------------------------------------------------
			bindings = <
	&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL_ 3  &trans &trans  &trans  &trans   &trans   &trans  &trans &trans  &trans
	&trans  &trans  &trans  &trans  &trans  &trans &trans  &trans   &trans   &trans   &trans  &trans    &trans &trans
	&trans   &trans  &trans  &trans &trans &trans &trans &trans  &trans   &trans   &trans   &trans        &trans
	&trans    &trans    &trans    &trans   &trans  &trans          &trans          &trans          &trans   &trans   &trans    &trans
	&trans  &trans   &trans                            &trans                                      &trans      &trans      &trans     &trans
			>;
		};

	};
};
